kernel_headers {
    name: "device_kernel_headers_system",
}

// Target platform agnostic config modules
soong_config_module_type {
    name: "aapt_version_code",
    module_type: "java_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["aapt_version_code"],
    properties: ["aaptflags"],
}

aapt_version_code {
    name: "aapt_version_code_defaults",
    soong_config_variables: {
        aapt_version_code: {
            aaptflags: [
                "--version-code",
                "%s",
            ],
        },
    },
}

soong_config_module_type {
    name: "gralloc_10_usage_bits",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["additional_gralloc_10_usage_bits"],
    properties: ["cppflags"],
}

gralloc_10_usage_bits {
    name: "gralloc_10_usage_bits_defaults",
    soong_config_variables: {
        additional_gralloc_10_usage_bits: {
            cppflags: ["-DADDNL_GRALLOC_10_USAGE_BITS=%s"],
        },
    },
}

soong_config_module_type {
    name: "target_process_sdk_version_overrides",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["target_process_sdk_version_override"],
    properties: ["cppflags"],
}

target_process_sdk_version_overrides {
    name: "process_sdk_version_overrides_defaults",
    soong_config_variables: {
        target_process_sdk_version_override: {
            cppflags: ["-DSDK_VERSION_OVERRIDES=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "target_shim_libs",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["target_ld_shim_libs"],
    properties: ["cppflags"],
}

target_shim_libs {
    name: "shim_libs_defaults",
    soong_config_variables: {
        target_ld_shim_libs: {
            cppflags: ["-DLD_SHIM_LIBS=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "vendor_init",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["target_init_vendor_lib"],
    properties: ["whole_static_libs"],
}

vendor_init {
    name: "vendor_init_defaults",
    soong_config_variables: {
        target_init_vendor_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "power_libperfmgr",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["target_power_libperfmgr_mode_extension_lib"],
    properties: [
        "whole_static_libs",
    ],
}

power_libperfmgr {
    name: "power_libperfmgr_defaults",
    soong_config_variables: {
        target_power_libperfmgr_mode_extension_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_udfps_lib",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["target_surfaceflinger_udfps_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

surfaceflinger_udfps_lib {
    name: "surfaceflinger_udfps_lib_defaults",
    soong_config_variables: {
        target_surfaceflinger_udfps_lib: {
            cppflags: ["-DTARGET_PROVIDES_UDFPS_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "bootloader_message_offset",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    value_variables: ["bootloader_message_offset"],
    properties: ["cflags"],
}

bootloader_message_offset {
    name: "bootloader_message_offset_defaults",
    soong_config_variables: {
        bootloader_message_offset: {
            cflags: ["-DBOARD_RECOVERY_BLDRMSG_OFFSET=%s"],
        },
    },
}

soong_config_module_type {
    name: "health_charging_control",
    module_type: "cc_defaults",
    config_namespace: "statixGlobalVars",
    bool_variables: [
        "target_health_charging_control_supports_toggle",
        "target_health_charging_control_supports_bypass",
        "target_health_charging_control_supports_deadline",
    ],
    value_variables: [
        "target_health_charging_control_charging_path",
        "target_health_charging_control_charging_enabled",
        "target_health_charging_control_charging_disabled",
        "target_health_charging_control_deadline_path",
        "target_health_charging_control_stage_path",
    ],
    properties: ["cppflags"],
}

health_charging_control {
    name: "health_charging_control_defaults",
    soong_config_variables: {
        target_health_charging_control_supports_toggle: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_SUPPORTS_TOGGLE"],
        },
        target_health_charging_control_supports_bypass: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_SUPPORTS_BYPASS"],
        },
        target_health_charging_control_supports_deadline: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_SUPPORTS_DEADLINE"],
        },
        target_health_charging_control_charging_path: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_CHARGING_PATH=\"%s\""],
        },
        target_health_charging_control_charging_enabled: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_CHARGING_ENABLED=\"%s\""],
        },
        target_health_charging_control_charging_disabled: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_CHARGING_DISABLED=\"%s\""],
        },
        target_health_charging_control_deadline_path: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_DEADLINE_PATH=\"%s\""],
        },
        target_health_charging_control_stage_path: {
            cppflags: ["-DHEALTH_CHARGING_CONTROL_STAGE_PATH=\"%s\""],
        },
    },
}

// QCOM specific config modules
soong_config_module_type {
    name: "librmnetctl_pre_uplink",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    bool_variables: ["uses_pre_uplink_features_netmgrd"],
    properties: ["cflags"],
}

librmnetctl_pre_uplink {
    name: "librmnetctl_pre_uplink_defaults",
    soong_config_variables: {
        uses_pre_uplink_features_netmgrd: {
            cflags: ["-DNO_UPLINK_FEATURES"],
        },
    },
}

soong_config_module_type {
    name: "qti_camera_device",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    bool_variables: ["uses_qti_camera_device"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_camera_device {
    name: "qti_camera_device_defaults",
    soong_config_variables: {
        uses_qti_camera_device: {
            cppflags: ["-DQTI_CAMERA_DEVICE"],
            shared_libs: ["vendor.qti.hardware.camera.device@1.0"],
        },
    },
}

soong_config_module_type {
    name: "extended_compress_format",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    bool_variables: ["supports_extended_compress_format"],
    properties: ["cflags"],
}

extended_compress_format {
    name: "extended_compress_format_defaults",
    soong_config_variables: {
        supports_extended_compress_format: {
            cflags: ["-DENABLE_EXTENDED_COMPRESS_FORMAT"],
        },
    },
}

soong_config_module_type {
    name: "qti_cryptfshw_qsee",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    bool_variables: ["should_wait_for_qsee"],
    properties: ["cflags"],
}

qti_cryptfshw_qsee {
    name: "qti_cryptfshw_qsee_defaults",
    soong_config_variables: {
        should_wait_for_qsee: {
            cflags: ["-DWAIT_FOR_QSEE"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_qcom_extensions",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    value_variables: ["qcom_display_headers_namespace"],
    properties: [
        "cppflags",
        "header_libs",
    ],
}

surfaceflinger_qcom_extensions {
    name: "surfaceflinger_qcom_ext_defaults",
    soong_config_variables: {
        qcom_display_headers_namespace: {
            cppflags: ["-DQCOM_UM_FAMILY"],
            header_libs: ["//%s:display_intf_headers"],
        },
    },
}

soong_config_module_type {
    name: "qti_vibrator_hal",
    module_type: "cc_defaults",
    config_namespace: "statixQcomVars",
    bool_variables: ["qti_vibrator_use_effect_stream"],
    value_variables: ["qti_vibrator_effect_lib"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_vibrator_hal {
    name: "qti_vibrator_hal_defaults",
    soong_config_variables: {
        qti_vibrator_use_effect_stream: {
            cppflags: ["-DUSE_EFFECT_STREAM"],
        },
        qti_vibrator_effect_lib: {
            shared_libs: ["%s"],
        },
    },
}
